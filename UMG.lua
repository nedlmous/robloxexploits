--[[

███╗   ██╗███████╗██████╗ ██╗     ███╗   ███╗ ██████╗ ██╗   ██╗███████╗
████╗  ██║██╔════╝██╔══██╗██║     ████╗ ████║██╔═══██╗██║   ██║██╔════╝
██╔██╗ ██║█████╗  ██║  ██║██║     ██╔████╔██║██║   ██║██║   ██║███████╗
██║╚██╗██║██╔══╝  ██║  ██║██║     ██║╚██╔╝██║██║   ██║██║   ██║╚════██║
██║ ╚████║███████╗██████╔╝███████╗██║ ╚═╝ ██║╚██████╔╝╚██████╔╝███████║
╚═╝  ╚═══╝╚══════╝╚═════╝ ╚══════╝╚═╝     ╚═╝ ╚═════╝  ╚═════╝ ╚══════╝
10#7055 https://discord.gg/YpxuQWRDd6

]]









local player = game.Players.LocalPlayer

local function freeze(character)
    local limbs = {"Left Arm", "Right Arm", "Left Leg", "Right Leg"}
    local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso") or character:FindFirstChild("LowerTorso")
    local head = character:FindFirstChild("Head")

    if torso then
        torso.Anchored = true
    end

    for _, limbName in ipairs(limbs) do
        local limb = character:FindFirstChild(limbName)
        if limb then
            limb.Anchored = true
        end
    end

    if head then
        head.Anchored = true
    end
end

local function thaw(character)
    local limbs = {"Left Arm", "Right Arm", "Left Leg", "Right Leg"}
    local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso") or character:FindFirstChild("LowerTorso")
    local head = character:FindFirstChild("Head")

    if torso then
        torso.Anchored = false
    end

    for _, limbName in ipairs(limbs) do
        local limb = character:FindFirstChild(limbName)
        if limb then
            limb.Anchored = false
        end
    end

    if head then
        head.Anchored = false
    end
end

local equip = function()
if game.Players.LocalPlayer.Character:FindFirstChild("Pickaxe") then
    print("you good")
else
game.Players.LocalPlayer.Backpack.Pickaxe.Parent = game.Players.LocalPlayer.Character
end
end
local ogpos = nil
ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua"))()
local GUI = Mercury:Create{
    Name = "UMG - Nedlmous",
    Size = UDim2.fromOffset(600, 600),
    Theme = Mercury.Themes.Dark,
    Link = "https://github.com/deeeity/mercury-lib"
}
local Tab2 = GUI:Tab{
	Name = "Main",
	Icon = "rbxassetid://8569322835"
}

local Tab = GUI:Tab{
	Name = "Ore Sniper",
	Icon = "rbxassetid://8569322835"
}

local Tab3 = GUI:Tab{
	Name = "Testing / LB",
	Icon = "rbxassetid://8569322835"
}
Tab:Button{
	Name = "Locked / Rare",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if v:FindFirstChild("ProtectOwner") then
        if v.ProtectOwner.Value == game.Players.LocalPlayer.Name then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
    end
}
Tab:Button{
	Name = "Unlocked / Trade",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("Placed") then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
     end
}

Tab3:Button{
	Name = "Info",
	Description = nil,
	Callback = function()
    GUI:Notification{
	Title = "Info",
	Text = "LB just means less blantant, i just use this section for less obvious scripts, or for testing",
	Duration = 5,
	Callback = function() end
}
    end
}

Tab3:Button{
    Name = "Unlocked V2",
    Description = "Attempts to mine any unlocked ores, faster and non-suspicious",
    Callback = function()
        equip()
        freeze(player.Character)
        ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        for i, v in pairs(workspace.Mine:GetChildren()) do
            if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("Placed") then
                local args = {
                    [1] = true
                }
                local rarity = "Unknown"
                if v:FindFirstChild("SpecialRarity") then
                    rarity = v.SpecialRarity.Value
                end
                local mined = false
                for j = 1, 10 do
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, -30, 0)
                    game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
                    local args = {
                        [1] = v,
                        [2] = v.CFrame,
                        [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
                    }
                    game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
                    if not v:IsDescendantOf(workspace.Mine) then
                        mined = true
                        GUI:Notification{
                            Title = "nedlmous",
                            Text = "Successfully mined " .. v.Name .. "\n Rarity 1/" .. rarity,
                            Duration = 3,
                            Callback = function() end
                        }
                        break
                    end
                    if j > 3 and not mined then
                        thaw(player.Character)
                        wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, -30, 0)
                        wait()
                        freeze(player.Character)
                    end
                end
            end
        end
        local args = {
            [1] = false
        }
        thaw(player.Character)
        game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
    end
}



Tab:Button{
	Name = "EVIL",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("EVIL") then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
     end
}

Tab:Button{
	Name = "Gigantic",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("Gigantic") then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
     end
}

Tab:Button{
	Name = "Tiny",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("Tiny") then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
     end
}

Tab:Button{
	Name = "Altered",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("Altered") then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
     end
}

Tab:Button{
	Name = "Super Altered",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("Super Altered") then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
     end
}

local cr = nil

Tab:Textbox{
	Name = "Custom rarity",
	Callback = function(text)
    cr = tonumber(text)
    end
}

Tab:Button{
	Name = "C-Rarity",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v:FindFirstChild("SpecialRarity") and v.SpecialRarity.Value > cr then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
    end
}
local ore = nil
Tab:Textbox{
	Name = "Specific ore",
	Callback = function(text)
    ore = text
    end
}

Tab:Button{
	Name = "S-ore",
	Description = nil,
	Callback = function()
    equip()
    ogpos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    for i, v in pairs(workspace.Mine:GetChildren()) do
    if not v:FindFirstChild("ProtectOwner") and v.Name == ore then
        local args = {
            [1] = true
        }
        for j = 1, 3 do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
            local args = {
                [1] = v,
                [2] = v.CFrame,
                [3] = Ray.new(Vector3.new(-169.61251831054688, 39.70539855957031, 25.886428833007812), Vector3.new(0.885949432849884, -0.4590858817100525, -0.06583070009946823))
            }
            game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("ApplyTarget"):InvokeServer(unpack(args))
        end
    end
end
local args = {
    [1] = false
}

game:GetService("Players").LocalPlayer.Character.Pickaxe:WaitForChild("Activation"):FireServer(unpack(args))
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ogpos
    end
}


local powah = 10
Tab2:Textbox{
    Name = "BM Power",
    Callback = function(text)
        if tonumber(text) then
            powah = tonumber(text)
        else
            GUI:Notification{
	Title = "hey",
	Text = "use numbers not a sentence bro",
	Duration = 3,
	Callback = function() end
}
        end
    end
}

Tab2:Button{
    Name = "BetterMine",
    Description = nil,
    Callback = function()
        local args = {
            [1] = true
        }
        for i = 1, powah do
            game:GetService("Players").LocalPlayer.Character.Pickaxe.Activation:FireServer(unpack(args))
        end
    end
}
local bomb = false
local size = 50
local random = 10
local running = false  -- Keeps track of whether the loop is running

Tab3:Slider{
    Name = "bomb-pos",
    Default = 10,
    Min = 1,
    Max = 100,
    Callback = function(value)
        random = value
    end
}

Tab3:Slider{
    Name = "bomb-size",
    Default = 50,
    Min = 1,
    Max = 500,
    Callback = function(value)
        size = value
    end
}

local function bombin()
    while bomb do
        for i, v in pairs(game.workspace.Debris:GetChildren()) do
            if v:IsA("BasePart") then
                v.Size = Vector3.new(size, size, size)
                for i = 1, 10 do
                    v.CFrame = v.CFrame * CFrame.new(
                        math.random(random * -1, random),
                        math.random(random * -1, random),
                        math.random(random * -1, random)
                    )
                end
            end
        end
        wait(0.5)
    end
end

Tab3:Toggle{
    Name = "Bomb Pickaxe FX",
    StartingState = false,
    Description = "makes the FXs from pickaxes that break ores bigger and moves them randomly\nusing a netless in a private server works best",
    Callback = function(state)
        bomb = state
        if bomb and not running then
            running = true
            bombin()
        elseif not bomb and running then
            running = false
        end
    end
}
