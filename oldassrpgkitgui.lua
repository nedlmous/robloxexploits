--[[

███╗   ██╗███████╗██████╗ ██╗     ███╗   ███╗ ██████╗ ██╗   ██╗███████╗
████╗  ██║██╔════╝██╔══██╗██║     ████╗ ████║██╔═══██╗██║   ██║██╔════╝
██╔██╗ ██║█████╗  ██║  ██║██║     ██╔████╔██║██║   ██║██║   ██║███████╗
██║╚██╗██║██╔══╝  ██║  ██║██║     ██║╚██╔╝██║██║   ██║██║   ██║╚════██║
██║ ╚████║███████╗██████╔╝███████╗██║ ╚═╝ ██║╚██████╔╝╚██████╔╝███████║
╚═╝  ╚═══╝╚══════╝╚═════╝ ╚══════╝╚═╝     ╚═╝ ╚═════╝  ╚═════╝ ╚══════╝
10#7055 https://discord.gg/YpxuQWRDd6

]]









local player = game:GetService("Players").LocalPlayer
local character = player.Character
local humanoid = character:WaitForChild("Humanoid")
local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua"))()
local GUI = Mercury:Create{
    Name = "Mercury",
    Size = UDim2.fromOffset(600, 400),
    Theme = Mercury.Themes.Dark,
    Link = "https://github.com/deeeity/mercury-lib"
}

local Tab = GUI:Tab{
    Name = "Main",
    Icon = "rbxassetid://8569322835"
}

local killauraEnabled = false
local killauraLoop = nil

local function GetDistance(pointA, pointB)
    return (pointA - pointB).Magnitude
end

local function KillAuraLoop()
    while killauraEnabled do
        wait(0.05)
        if humanoid.Health <= 0 then
            break
        end

        local enemies = workspace:WaitForChild("MobHolder"):GetChildren()
        for i, v in pairs(enemies) do
            local head = v:FindFirstChild("Head")
            local enemy = v:FindFirstChild("Enemy")

            if head and enemy then
                local distance = GetDistance(character.PrimaryPart.Position, head.Position)
                if distance <= 11 then -- Adjust the distance threshold as needed
                    local tool = character:FindFirstChildWhichIsA("Tool")
                    if tool then
                        local args = {
                            [1] = head,
                            [2] = enemy,
                            [3] = tool
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("GameRemotes"):WaitForChild("DamageEvent"):FireServer(unpack(args))
                    end
                end
            end
        end
    end
end

Tab:Toggle{
    Name = "Killaura",
    StartingState = false,
    Description = "Toggle to enable/disable killaura",
    Callback = function(state)
        killauraEnabled = state
        if state then
            killauraLoop = coroutine.create(KillAuraLoop)
            coroutine.resume(killauraLoop)
        else
            if killauraLoop then
                coroutine.yield(killauraLoop)
            end
        end
    end
}

Tab:Button{
	Name = "Get all weapons",
	Description = "Attempts to get all the weapons, by buying them.",
	Callback = function()
	
for i,v in pairs(game:GetService("ReplicatedStorage").GameItems:GetChildren()) do
local args = {
    [1] = v.Name
}

game:GetService("ReplicatedStorage"):WaitForChild("GameRemotes"):WaitForChild("BuyEvent"):FireServer(unpack(args))
end
	end
}
