local doFly = false
local player = game.Players.LocalPlayer
local character = workspace:WaitForChild("char")
local flyingSpeed = 50
local flyingSpeed2 = -50
local maxSpeed = 100
local maxVector = Vector3.new(100, 100, 100)
local isFlying = false

local function toggleFlying(input)
if doFly == true then
    local camera = game.Workspace.CurrentCamera
    while isFlying and doFly do
        local forwardVector = camera.CFrame.lookVector
        local rightVector = camera.CFrame.RightVector

        if input.KeyCode == Enum.KeyCode.W then
            local newVelocity = character.AssemblyLinearVelocity + (forwardVector * flyingSpeed)
            if newVelocity.Magnitude > maxSpeed then
                newVelocity = newVelocity.Unit * maxSpeed
            end
            character.AssemblyLinearVelocity = newVelocity
        elseif input.KeyCode == Enum.KeyCode.S then
            local newVelocity = character.AssemblyLinearVelocity - (forwardVector * flyingSpeed)
            if newVelocity.Magnitude > maxSpeed then
                newVelocity = newVelocity.Unit * maxSpeed
            end
            character.AssemblyLinearVelocity = newVelocity
        elseif input.KeyCode == Enum.KeyCode.A then
            local newVelocity = character.AssemblyLinearVelocity - (rightVector * flyingSpeed)
            if newVelocity.Magnitude > maxSpeed then
                newVelocity = newVelocity.Unit * maxSpeed
            end
            character.AssemblyLinearVelocity = newVelocity
        elseif input.KeyCode == Enum.KeyCode.D then
            local newVelocity = character.AssemblyLinearVelocity + (rightVector * flyingSpeed)
            if newVelocity.Magnitude > maxSpeed then
                newVelocity = newVelocity.Unit * maxSpeed
            end
            character.AssemblyLinearVelocity = newVelocity
        elseif input.KeyCode == Enum.KeyCode.Space then
            local newVelocity = character.AssemblyLinearVelocity + Vector3.new(0,flyingSpeed,0)
            if newVelocity.Magnitude > maxSpeed then
                newVelocity = newVelocity.Unit * maxSpeed
            end
            character.AssemblyLinearVelocity = newVelocity
        elseif input.KeyCode == Enum.KeyCode.LeftShift then
            local newVelocity = character.AssemblyLinearVelocity - Vector3.new(0,flyingSpeed,0)
            if newVelocity.Magnitude > maxSpeed then
                newVelocity = newVelocity.Unit * maxSpeed
            end
            character.AssemblyLinearVelocity = newVelocity
        else
            character.AssemblyLinearVelocity = character.AssemblyLinearVelocity + Vector3.new(0, 0, 0)
        end

        wait(0.1)
    end
end
        end

local function stopFlying(input)
if doFly == true then
    if input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.S or input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.A or input.KeyCode == Enum.KeyCode.D then
        while not isFlying and doFly do
        wait()
        character.AssemblyLinearVelocity = Vector3.new(0,0,0)
    end
    end
end
        end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, isProcessed)
if doFly == true then
    if not isProcessed and (input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.S or input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.A or input.KeyCode == Enum.KeyCode.D) then
        isFlying = true
        toggleFlying(input)
    end
end
end)

UserInputService.InputEnded:Connect(function(input, isProcessed)
    if doFly == true then
    if not isProcessed and (input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.S or input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.A or input.KeyCode == Enum.KeyCode.D) then
        isFlying = false
        stopFlying(input)
    end
    end
end)

local fullGame = {
    [1] = "inf",
    [2] = "111111111111112111111",
    [3] = "111111111111111110211111111111111111111",
    [4] = "6",
    [5] = "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
    [6] = "inf",
    [7] = "1000",
    [8] = "0,",
    [9] = "0,",
    [10] = 3
}

local noGame = {
    [1] = "0",
    [2] = "100000000000002000000",
    [3] = "100000000000000000200000000000000000000",
    [4] = "6",
    [5] = "0000000000000000000000000000000000000000000000000000000000000000",
    [6] = "0",
    [7] = "1000",
    [8] = "0,",
    [9] = "0,",
    [10] = 3
}


local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua"))()
local GUI = Mercury:Create{
    Name = "NedlNodl",
    Size = UDim2.fromOffset(600, 400),
    Theme = Mercury.Themes.Dark,
    Link = "https://github.com/deeeity/mercury-lib"
}
local Tab = GUI:Tab{
    Name = "Main",
    Icon = "rbxassetid://8569322835"
}
Tab:Toggle{
    Name = "Fly [ buggy ]",
    StartingState = false,
    Description = "Toggles flying [W,A,S,D,Space,and Lshift]",
    Callback = function(state)
    player = game.Players.LocalPlayer
    character = workspace:WaitForChild("char")
    doFly = state
    if doFly == false then
    character.AssemblyLinearVelocity = Vector3.new(0,0,0)
    character.CanCollide = true
    else
    character.AssemblyLinearVelocity = Vector3.new(0,0,0)
    character.CanCollide = false
    end
    end
}

Tab:Button{
    Name = "Full save",
    Description = nil,
    Callback = function()
    workspace.share.save:FireServer(fullGame)
    end
}

Tab:Button{
    Name = "Clean save",
    Description = nil,
    Callback = function() 
    workspace.share.save:FireServer(noGame)
    end
}
